/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.virna5.contexto;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.virna5.contexto//Monitor//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "MonitorTopComponent",
        iconBase = "com/virna5/contexto/nfs_mount.png",
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "com.virna5.contexto.MonitorTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_MonitorAction",
        preferredID = "MonitorTopComponent"
)
@Messages({
    "CTL_MonitorAction=Monitor",
    "CTL_MonitorTopComponent=Monitor de Dispositivos",
    "HINT_MonitorTopComponent=Monitore os dispositivos em funcionamento nas suas tarefas"
})
public final class MonitorTopComponent extends TopComponent {

    public MonitorTopComponent() {
        initComponents();
        setName(Bundle.CTL_MonitorTopComponent());
        setToolTipText(Bundle.HINT_MonitorTopComponent());
        //setContentPane(dpmain);
         
        createFrame(1);
        createFrame(2);

    }
    
    protected void createFrame(int pos) {
        Mon1IFrame mon1 = new Mon1IFrame();
        mon1.setTitle("Dispositivo " + pos);
        mon1.setVisible(true);
        dpmain.add(mon1);
        mon1.setLocation(100*pos, 100*pos);
        
        
        try {
            mon1.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {}
}
    
    

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dpmain = new javax.swing.JDesktopPane();

        setOpaque(true);
        setLayout(new java.awt.BorderLayout());

        dpmain.setBackground(new java.awt.Color(0, 153, 0));

        javax.swing.GroupLayout dpmainLayout = new javax.swing.GroupLayout(dpmain);
        dpmain.setLayout(dpmainLayout);
        dpmainLayout.setHorizontalGroup(
            dpmainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 982, Short.MAX_VALUE)
        );
        dpmainLayout.setVerticalGroup(
            dpmainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 724, Short.MAX_VALUE)
        );

        add(dpmain, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane dpmain;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
