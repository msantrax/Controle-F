/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.virna5.graph;

import com.mxgraph.swing.mxGraphComponent;
import com.mxgraph.view.mxGraph;
import com.virna5.grapheditor.EditorMenuBar;
import java.awt.BorderLayout;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.virna5.graph//Graph//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "GraphTopComponent",
        iconBase = "com/virna5/graph/frame_edit.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "com.virna5.graph.GraphTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_GraphAction",
        preferredID = "GraphTopComponent"
)
@Messages({
    "CTL_GraphAction=Graph",
    "CTL_GraphTopComponent=Graph Window",
    "HINT_GraphTopComponent=This is a Graph window"
})
public final class GraphTopComponent extends TopComponent {

    private static GraphTopComponent instance;
    
    
    public GraphTopComponent() {
        initComponents();
        setName(Bundle.CTL_GraphTopComponent());
        setToolTipText(Bundle.HINT_GraphTopComponent());
        
//        mxGraph graph = new mxGraph();
//        Object parent = graph.getDefaultParent();
//
//        graph.getModel().beginUpdate();
//        try {
//            Object v1 = graph.insertVertex(parent, null, "FileObserver", 20, 20, 80, 30);
//            Object v2 = graph.insertVertex(parent, null, "CSV Filter", 240, 150, 80, 30);
//            graph.insertEdge(parent, null, "Result", v1, v2);
//        }
//        finally{
//            graph.getModel().endUpdate();
//        }
//
//        mxGraphComponent chart_panel = new mxGraphComponent(graph);

        GraphEditor chart_panel = new GraphEditor();
        //chart_panel.createFrame(new EditorMenuBar(chart_panel)).setVisible(true);
        
        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chart_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chart_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
